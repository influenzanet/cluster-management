{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  namespace: {{ .Values.namespace }}
  annotations:
{{- if not (eq .Values.issuerType "none") }}
    cert-manager.io/cluster-issuer: {{ .Values.clusterIssuer }}
{{- end }}
{{- if .Values.basicAuth.enabled }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
{{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
{{- range concat ( list .Values.domain ) .Values.redirectDomains (.Values.tlsDomains | default ( list ) )}}
      - {{ tpl . $ }}
{{- end }}
      secretName: {{ .Values.tlsSecretName }}
  rules:
    - host: {{ .Values.domain }}
      http:
        paths:
          - backend: {{ template "ingress.backend" .Values.svcWebParticipant }}
            path: /(.*)
            pathType: ImplementationSpecific
---
{{- if and .Values.basicAuth.enabled (gt (len .Values.basicAuth.excludePaths) 0) }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}-images
  namespace: {{ .Values.namespace }}
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - secretName: {{ .Values.tlsSecretName }}
  rules:
    - host: {{ .Values.domain }}
      http:
        paths:
          {{- range .Values.basicAuth.excludePaths }}
          - backend: {{ template "ingress.backend" $.Values.svcWebParticipant }}
            path: {{ tpl . $ }}
            pathType: Prefix
          {{- end }}
{{ end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}-api
  namespace: {{ .Values.namespace }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - secretName: {{ .Values.tlsSecretName }}
  rules:
    - host: {{ .Values.domain }}
      http:
        paths:
          - backend: {{ template "ingress.backend" .Values.svcParticipantApi }}
            path: {{ .Values.participantApiPath }}/(.*)
            pathType: ImplementationSpecific
          - backend: {{ template "ingress.backend" .Values.svcManagementApi }}
            path: {{ .Values.managementApiPath }}/(.*)
            pathType: ImplementationSpecific
{{- if .Values.svcCounter.enabled }}            
          - backend: {{ template "ingress.backend" .Values.svcCounter }}
            path: {{ .Values.counterWebPath }}/?(.*)
            pathType: ImplementationSpecific  
{{- end }}

{{- if .Values.redirectDomains }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}-redirect
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/permanent-redirect: https://{{ .Values.domain }}
spec:
  tls:
    - secretName: {{ .Values.tlsSecretName }}
  rules:
{{- range .Values.redirectDomains }}
    - host: {{ tpl . $ }}
{{- end }}
{{- end  -}}
{{- end  -}}